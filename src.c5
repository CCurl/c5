: here  (ha) @ ;
: vhere (vha) @ ;
: last  (la) @ ;
: immediate 1 last cell + c! ;
: inline    2 last cell + c! ;

: begin here ; immediate
: while  (jmpnz)  c, , ; immediate
: -while (njmpnz) c, , ; immediate
: until  (jmpz)   c, , ; immediate
: -until (njmpz)  c, , ; immediate
: again  (jmp)    c, , ; immediate

: if (jmpz) c, here 0 , ; immediate
: then here swap ! ; immediate

: a>  a@ >t ; inline
: >a  t> a! ; inline

: (  a> >in @ a! 
   begin
      @a+ ')' = if  a@ >in !  >a  exit  then 
   again ; immediate

: t@+ t@ dup 1+ t! ; inline
: tdrop t> drop ; inline

: (quote) a>  (lit4) c, vhere dup , >t  >in @ 1+ a! 
   begin
      @a '"' =
      if  0 t@+ c!  t> (vha) !  a@ 1+ >in !  >a  exit  then
      @a+ t@+ c! 
   again ;

: "  (quote) ; immediate
: ." (quote) (ztype) c, ; immediate

: bl 32 ; inline
: cr 13 emit 10 emit ; inline
: space bl emit ; inline

: <# last 32 - >t 0 t@ c! ;
: #c t@ 1- dup t! c! ;
: #n '0' + dup '9' > if 7 + then #c ;
: #. '.' #c ;
: # base @ /mod swap #n ;
: #s begin # -while drop ;
: #> t> ;
: .  ( n-- ) <# #s #> ztype space ;
: .2 ( n-- ) <# # #s #> ztype space ;
: .3 ( n-- ) <# # # #s #> ztype space ;

: .ver  ." c5 v" version <# # # #. # # #. #s #> ztype cr ;
.ver

( temp for testing )
: .h ( n-- ) base @ >t 16 base ! .2 t> base ! ;
: .d ( n-- ) base @ >t 10 base ! .3 t> base ! ;
: .b ( n-- ) base @ >t  2 base ! .  t> base ! ;

: dump    ( f t-- ) a> >t a! begin @a+ .  a@ t@ > until tdrop >a ;
: hexdump ( f t-- ) a> >t a! begin @a+ .h a@ t@ > until tdrop >a ;

: mil 1000 dup * * ;
: elapsed timer swap - . ." usec" ;
: bm timer swap for next elapsed ;
